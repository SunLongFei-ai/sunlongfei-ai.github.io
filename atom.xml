<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sunlongfei-ai.github.io</id>
    <title>一只小强强</title>
    <updated>2020-03-05T03:14:30.782Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://sunlongfei-ai.github.io"/>
    <link rel="self" href="https://sunlongfei-ai.github.io/atom.xml"/>
    <subtitle>专注于各个奥利给</subtitle>
    <logo>https://sunlongfei-ai.github.io/images/avatar.png</logo>
    <icon>https://sunlongfei-ai.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 一只小强强</rights>
    <entry>
        <title type="html"><![CDATA[词云？ 看看别人是怎么做的吧]]></title>
        <id>https://sunlongfei-ai.github.io/post/ci-yun-kan-kan-bie-ren-shi-zen-me-zuo-de-ba/</id>
        <link href="https://sunlongfei-ai.github.io/post/ci-yun-kan-kan-bie-ren-shi-zen-me-zuo-de-ba/">
        </link>
        <updated>2020-03-04T13:22:12.000Z</updated>
        <content type="html"><![CDATA[<p>写在开始的话：</p>
<pre><code>用到的库：
requests  json  wordcloud  matplotlib
</code></pre>
<p>接下来就是我们的疫情数据源了，毕竟是个人所写的<br>
没有数据来源，也只能请求别人的api来获取数据了</p>
<pre><code>https://api.yimian.xyz/coro
</code></pre>
<p>然后访问该api呢，会发现是json格式的，所以就需要导入<br>
json库了，毕竟</p>
<pre><code>json.loads() # 是用来转换json格式的 方法
</code></pre>
<p>然后呢，数据就都在里面了，请求一下<br>
另外，一个json转换网站帖一下：</p>
<pre><code>https://www.json.cn/
data = requests.get(url,headers = {&quot;User-Agent&quot;:UserAgent().random}).text
</code></pre>
<p>就来取一下数据</p>
<pre><code>for datas in json_data:
    for c in datas['cities']:
        cityName = c['cityName']
        cCount = c['confirmedCount']
        sCount = c['suspectedCount']
        total = int(cCount) + int(sCount)
        city_dict[cityName] = total
</code></pre>
<p>然后就会报错，因为有的数据不是这样格式的，所以修改<br>
一下格式，加上判断</p>
<pre><code>city_dict = {}
json_data = json.loads(data)
for datas in json_data:
    if 'cities' in datas:
        for c in datas['cities']:
            cityName = c['cityName']
            cCount = c['confirmedCount']
            sCount = c['suspectedCount']
            total = int(cCount) + int(sCount)
            city_dict[cityName] = total
    else:
        cityName = datas['provinceName']
        cCount = datas['confirmedCount']
        sCount = datas['suspectedCount']
        total = int(cCount) + int(sCount)
        city_dict[cityName] = total  
</code></pre>
<p>既然数据已经取出来了，那就不是要任人宰割了？</p>
<pre><code>#调整图片清晰度：scale属性，该值越大越清楚，我设置的是scale=32
#margin:词间间距
#mode:颜色模式默认&quot;RGB&quot;，想弄透明背景需要选择&quot;RGBA&quot;，但是呢，透明图形不是好整的，因为这里有一个小小的bug，你需要设置background_color=None，还不能设置长宽
yun = wordcloud.WordCloud(margin=1,scale=16,background_color=&quot;white&quot;, mode=&quot;RGBA&quot; ,font_path='C:\Windows\Fonts\&quot;填入自己电脑字体文件即可&quot;')
yun.generate_from_frequencies(frequencies=city_dict)
plt.figure(figsize=(15,8),dpi=80)
plt.imshow(yun,interpolation='bilinear')
plt.axis('off')#关闭坐标
plt.show()
</code></pre>
<p>最后加上想要的图形需要numpy库和图像处理PIL</p>
<pre><code>import numpy as np
import PIL#做图像
mask = np.array(PIL.Image.open(r'{}')) # 填入想要图片
yun = wordcloud.WordCloud(margin=1,mask = mask,scale=16,background_color=&quot;white&quot;,mode=&quot;RGBA&quot; ,font_path='C:\Windows\Fonts\&quot;填入自己电脑字体文件即可&quot;') # 这里传入mask参数即可
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[matplotlib 什么？数据分析]]></title>
        <id>https://sunlongfei-ai.github.io/post/matplotlib-shi-me-shu-ju-fen-xi/</id>
        <link href="https://sunlongfei-ai.github.io/post/matplotlib-shi-me-shu-ju-fen-xi/">
        </link>
        <updated>2020-03-04T12:38:39.000Z</updated>
        <content type="html"><![CDATA[<p>添加标题-title</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
# 显示中文
plt.rcParams['font.sans-serif'] = [u'SimHei']
plt.rcParams['axes.unicode_minus'] = False
%matplotlib inline
x=np.arange(0,10)
plt.title('这是一个示例标题')
plt.plot(x,x*x)
plt.show()
</code></pre>
<p>添加文字-text<br>
设置坐标和文字即可</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
# 显示中文
plt.rcParams['font.sans-serif'] = [u'SimHei']
plt.rcParams['axes.unicode_minus'] = False
%matplotlib inline
x=np.arange(-10,11,1)
y=x*x
plt.plot(x,y)
plt.title('这是一个示例标题')
# 添加文字
plt.text(-2.5,30,'function y=x*x')
plt.show()
</code></pre>
<p>添加注释-annotate<br>
xy：为备注的坐标点<br>
xytext：备注文字的坐标(默认为xy的位置)<br>
arrowprops：在xy和xytext之间绘制一个箭头</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
# 显示中文
plt.rcParams['font.sans-serif'] = [u'SimHei']
plt.rcParams['axes.unicode_minus'] = False
%matplotlib inline
x=np.arange(-10,11,1)
y=x*x
plt.title('这是一个示例标题')
plt.plot(x,y)
# 添加注释
plt.annotate('这是一个示例注释',xy=(0,1),xytext=(-2,22),arrowprop{'headwidth':10,'facecolor':'r'})
plt.show()
</code></pre>
<p>设置坐标轴名称-xlabel/ylabel</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
# 显示中文
plt.rcParams['font.sans-serif'] = [u'SimHei']
plt.rcParams['axes.unicode_minus'] = False
%matplotlib inline
x=np.arange(1,20)
plt.xlabel('示例x轴')
plt.ylabel('示例y轴')
plt.plot(x,x*x)
plt.show()
</code></pre>
<p>添加图例-legend</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
# 显示中文
plt.rcParams['font.sans-serif'] = [u'SimHei']
plt.rcParams['axes.unicode_minus'] = False
%matplotlib inline
plt.plot(x,x)
plt.plot(x,x*2)
plt.plot(x,x*3)
plt.plot(x,x*4)
# 直接传入legend
plt.legend(['生活','颜值','工作','金钱'])
plt.show()
</code></pre>
<p>调整颜色-color<br>
传颜色参数，支持以下几种方式</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
x=np.arange(1,5)
#颜色的几种方式
plt.plot(x,color='g')
plt.plot(x+1,color='0.5')
plt.plot(x+2,color='#FF00FF')
plt.plot(x+3,color=(0.1,0.2,0.3))
plt.show()
</code></pre>
<p>切换线条样式-marker</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
x=np.arange(1,5)
plt.plot(x,marker='o')
plt.plot(x+1,marker='&gt;')
plt.plot(x+2,marker='s')
plt.show()
</code></pre>
<p>显示数学公式-mathtext</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
plt.title('chenqionghe')
plt.xlim([1,8])
plt.ylim([1,5])
plt.text(2,4,r'$ \alpha \beta \pi \lambda \omega $',size=25)
plt.text(4,4,r'$ \sin(0)=\cos(\frac{\pi}{2}) $',size=25)
plt.text(2,2,r'$ \lim_{x \rightarrow y} \frac{1}{x^3} $',size=25)
plt.text(4,2,r'$ \sqrt[4]{x}=\sqrt{y} $',size=25)
plt.show()
</code></pre>
<p>显示网格-grid</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
x='a','b','c','d'
y=[15,30,45,10]
plt.grid()
# 也可以设置颜色、线条宽度、线条样式
# plt.grid(color='g',linewidth='1',linestyle='-.')
plt.plot(x,y)
plt.show()
</code></pre>
<p>调整坐标轴刻度-locator_params</p>
<pre><code>同时调整x轴和y轴：plt.locator_params(nbins=20) 只调整x轴：plt.locator_params(‘'x',nbins=20) 只调整y轴：plt.locator_params(‘'y',nbins=20)

import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
x=np.arange(0,30,1)
plt.plot(x,x)
# x轴和y轴分别显示20个
plt.locator_params(nbins=20)
plt.show()
</code></pre>
<p>调整坐标轴范围-axis/xlim/ylim</p>
<pre><code>axis：[0,5,0,10]，x从0到5，y从0到10
xlim：对应参数有xmin和xmax，分别能调整最大值最小值
ylim：同xlim用法
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
x=np.arange(0,30,1)
plt.plot(x,x*x)
#显示坐标轴，plt.axis(),4个数字分别代表x轴和y轴的最小坐标，最大坐标
#调整x为10到25
plt.xlim(xmin=10,xmax=25)
plt.plot(x,x*x)
plt.show()
</code></pre>
<p>调整日期自适应-autofmt_xdate<br>
有时候显示日期会重叠在一起，非常不友好，调用plt.gcf().autofmt_xdate()，将自动调整角度</p>
<pre><code>import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
%matplotlib inline
x=pd.date_range('2020/01/01',periods=30)
y=np.arange(0,30,1)
plt.plot(x,y)
plt.gcf().autofmt_xdate()
plt.show()
</code></pre>
<p>添加双坐标轴-twinx</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
x=np.arange(1,20)
y1=x*x
y2=np.log(x)
plt.plot(x,y1)
# 添加一个坐标轴，默认0到1
plt.twinx()
plt.plot(x,y2,'r')
plt.show()
</code></pre>
<p>填充区域-fill/fill_beween<br>
fill填充函数区域</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
# 显示中文
plt.rcParams['font.sans-serif'] = [u'SimHei']
plt.rcParams['axes.unicode_minus'] = False
%matplotlib inline
x=np.linspace(0,5*np.pi,1000)
y1=np.sin(x)
y2=np.sin(2*x)
plt.plot(x,y1)
plt.plot(x,y2)
# 填充
plt.fill(x,y1,'g')
plt.fill(x,y2,'r')
plt.title('这是一个示例标题')
plt.show()
</code></pre>
<p>fill_beween填充函数交叉区域</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
# 显示中文
plt.rcParams['font.sans-serif'] = [u'SimHei']
plt.rcParams['axes.unicode_minus'] = False
%matplotlib inline
plt.title('这是一个示例标题')
x=np.linspace(0,5*np.pi,1000)
y1=np.sin(x)
y2=np.sin(2*x)
plt.plot(x,y1)
plt.plot(x,y2)
# 填充
plt.fill_between(x,y1,y2,where=y1&gt;y2,interpolate=True)
plt.show()
</code></pre>
<p>画一个填充好的形状-matplotlib.patche</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
import matplotlib.patches as mptaches
%matplotlib inline
xy1=np.array([0.2,0.2])
xy2=np.array([0.2,0.8])
xy3=np.array([0.8,0.2])
xy4=np.array([0.8,0.8])
fig,ax=plt.subplots()
#圆形,指定坐标和半径
circle=mptaches.Circle(xy1,0.15)
ax.add_patch(circle)
#长方形
rect=mptaches.Rectangle(xy2,0.2,0.1,color='r')
ax.add_patch(rect)
#多边形
polygon=mptaches.RegularPolygon(xy3,6,0.1,color='g')
ax.add_patch(polygon)
# 椭圆
ellipse=mptaches.Ellipse(xy4,0.4,0.2,color='c')
ax.add_patch(ellipse)
ax.axis('equal')
plt.show()
</code></pre>
<p>切换样式-plt.style.use<br>
matplotlib支持多种样式，可以通过plt.style.use切换样式，例如：plt.style.use('ggplot')输入 plt.style.available 可以查看所有的样式:</p>
<pre><code>import matplotlib.pyplot as plt
plt.style.available


示例代码，ggplot样式：

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.patches as mptaches
%matplotlib inline
plt.style.use('ggplot')
# 新建4个子图
fig,axes=plt.subplots(2,2)
ax1,ax2,ax3,ax4=axes.ravel()
# 第一个图
x,y=np.random.normal(size=(2,100))
ax1.plot(x,y,'o')
# 第二个图
x=np.arange(0,10)
y=np.arange(0,10)
colors=plt.rcParams['axes.prop_cycle']
length=np.linspace(0,10,len(colors))
for s in length:
    ax2.plot(x,y+s,'-')
# 第三个图
x=np.arange(5)
y1,y2,y3=np.random.randint(1,25,size=(3,5))
width=0.25
ax3.bar(x,y1,width)
ax3.bar(x+width,y2,width)
ax3.bar(x+2*width,y3,width)
# 第四个图
for i,color in enumerate(colors):
    xy=np.random.normal(size=2)
ax4.add_patch(plt.Circle(xy,radius=0.3,color=color['color']))
ax4.axis('equal')
plt.show()
</code></pre>
<p>原文地址：https://www.cnblogs.com/chenqionghe/</p>
<p>写在最后的：<br>
传至高人但细节面面俱到极为不易，收藏关注一波？</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[分享快乐站点？！]]></title>
        <id>https://sunlongfei-ai.github.io/post/fen-xiang-kuai-le-zhan-dian/</id>
        <link href="https://sunlongfei-ai.github.io/post/fen-xiang-kuai-le-zhan-dian/">
        </link>
        <updated>2020-03-04T11:54:17.000Z</updated>
        <content type="html"><![CDATA[<p>搞学习</p>
<pre><code>CSDN： https://www.csdn.net/
TED（最优质的演讲）：https://www.ted.com/
谷粉学术： https://gfsoso.99lb.net/scholar.html
大学资源网：http://www.dxzy163.com/
简答题：http://www.jiandati.com/
网易公开课：https://open.163.com/ted/
网易云课堂：https://study.163.com/
中国大学MOOC：www.icourse163.org
网易云课堂：study.163.com
哔哩哔哩弹幕网： www.bilibili.com
我要自学网： www.51zxw.net
知乎：www.zhihu.com
学堂在线：www.xuetangx.com
爱课程：www.icourses.cn
猫咪论文：https://lunwen.im/
iData（论文搜索）：www.cn-ki.net
文泉考试：https://www.wqkaoshi.com
码农之家（计算机电子书下载）：www.xz577.com
鸠摩搜书：www.jiumodiary.com
云海电子图书馆：www.pdfbook.cn
周读（书籍搜索）：ireadweek.com
知轩藏书：http://www.zxcs.me/
脚本之家电子书下载：https://www.jb51.net/books/
搜书VIP-电子书搜索：http://www.soshuvip.com/all.html
书格（在线古籍图书馆）：https://new.shuge.org/
术语在线：http://www.termonline.cn/
必看网（人生必看的书籍）：https://www.biikan.com/
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://sunlongfei-ai.github.io/post-images/1583323030500.png" alt="" loading="lazy"></figure>
<p>冷知识 / 黑科技</p>
<pre><code>上班摸鱼必备（假装电脑系统升级）： http://fakeupdate.net/
福利单词（一个不太正经的背单词网站）： http://dict.ftqq.com
创意光线绘画：http://weavesilk.com/
星系观察： https://stellarium-web.org/
煎蛋：http://jandan.net/
渣男-说话的艺术：https://lovelive.tools/
全历史：https://www.allhistory.com/
iData：https://www.cn-ki.net/
caj云阅读：http://cajviewer.cnki.net/cajcloud/
写代码
GitHub：https://github.com/
码云：https://gitee.com/
源码之家：https://www.mycodes.net/
JSON to Dart： https://javiercbk.github.io/json_to_dart/
Json在线解析验证： https://www.json.cn/
在线接口测试（Getman）：https://getman.cn/
</code></pre>
<p><img src="https://sunlongfei-ai.github.io/post-images/1583323048061.png" alt="" loading="lazy"><br>
资源搜索</p>
<pre><code>DogeDoge搜索引擎：www.dogedoge.com
秘迹搜索：https://mijisou.com/
小白盘：https://www.xiaobaipan.com/
云盘精灵（资源搜索）：www.yunpanjingling.com
虫部落（资源搜索）：www.chongbuluo.com
如风搜（资源搜索）：http://www.rufengso.net/
爱扒：https://www.zyboe.com/
</code></pre>
<p><a href="https://sunlongfei-ai.github.io/post-images/1583323083072.png"></a><br>
小工具</p>
<pre><code>奶牛快传（在线传输文件利器）： cowtransfer.com
文叔叔（大文件传输，不限速）：https://www.wenshushu.cn/
云端超级应用空间（PS，PPT，Excel，Ai）：https://uzer.me/
香当网（年终总结，个人简历，事迹材料，租赁合同，演讲稿）：https://www.xiangdang.net/
二维码生成：https://cli.im/
搜狗翻译：fanyi.sogou.com
熵数（图表制作，数据可视化）：https://dydata.io/appv2/#/pages/index/home
拷贝兔：https://cp.anyknew.com/
图片无限变放大：http://bigjpg.com/zh
幕布（在线大纲笔记工具）：mubu.com
在线转换器（在线转换器转换任何测量单位）：https://zh.justcnw.com/
调查问卷制作：https://www.wenjuan.com/
果核剥壳（软件下载）：https://www.ghpym.com/
软件下载：https://www.unyoo.com/
MSDN我告诉你（windows10系统镜像下载）：https://msdn.itellyou.cn/
</code></pre>
<p><img src="https://sunlongfei-ai.github.io/post-images/1583323067578.png" alt="" loading="lazy">!<br>
导航页（工具集）</p>
<pre><code>世界各国网址大全： http://www.world68.com/
小森林导航：http://www.xsldh6.com/
简捷工具：http://www.shulijp.com/
NiceTool.net 好工具网：http://www.nicetool.net/
现实君工具箱（综合型在线工具集成网站）：http://tool.uixsj.cn/
蓝调网站：http://lcoc.top/
偷渡鱼：https://touduyu.com/
牛导航：http://www.ziliao6.com/
小呆导航：https://www.webjike.com/index.html
简法主页：http://www.jianfast.com/
KIM主页：https://kim.plopco.com/
聚BT：https://jubt.net/cn/index.html
精准云工具合集：https://jingzhunyun.com/
兔2工具合集：https://www.tool2.cn/
爱资料工具（在线实用工具集合）：www.toolnb.com
工具导航：https://hao.logosc.cn/
</code></pre>
<p><img src="https://sunlongfei-ai.github.io/post-images/1583323119196.png" alt="" loading="lazy"><br>
看视频</p>
<pre><code>阿木影视： https://www.aosk.online/
电影推荐（分类别致）：http://www.mvcat.com
APP影院：https://app.movie/
去看TV：https://www.qukantv.net/
动漫视频网：http://www.zzzfun.com/
94神马电影网：http://www.9rmb.com/
NO视频官网：http://www.novipnoad.com/
蓝光画质电影：http://www.languang.co/
在线看剧：http://dy.27234.cn/
大数据导航：http://hao.199it.com/
多功能图片网站：https://www.logosc.cn/so/
牛牛TV：http://www.ziliao6.com/tv/
VideoFk解析视频：http://www.videofk.com/
蓝调网站：http://lcoc.top/vip2.3/
永久资源采集网：http://www.yongjiuzy1.com/
</code></pre>
<p><img src="https://sunlongfei-ai.github.io/post-images/1583323253706.png" alt="" loading="lazy"><br>
学设计</p>
<pre><code>码力全开（产品/设计师/独立开发者的资源库）： https://www.maliquankai.com/designnav/
免费音频素材：https://icons8.cn/music
新CG儿（视频素材模板，无水印+免费下载）：https://www.newcger.com/
Iconfont（阿里巴巴矢量图标库）： https://www.iconfont.cn/
小图标下载：https://www.easyicon.net/
Flight Icon：https://www.flighticon.co/
第一字体转换器：http://www.diyiziti.com/
doyoudosh（平面设计）：www.doyoudo.com
企业宣传视频在线制作：https://duomu.tv/
MAKE海报设计官网：http://maka.im/
一键海报神器：https://www.logosc.cn/photo/?utm_source=hao.logosc.cn&amp;utm_medium=referral
字由（字体设计）：http://www.hellofont.cn/
查字体网站：https://fonts.safe.360.cn/
爱给网（免费素材下载的网站，包括音效、配乐，3D、视频、游戏，平面、教程）： http://www.aigei.com/
在线视频剪辑：https://bilibili.clipchamp.com/editor
</code></pre>
<p><img src="https://sunlongfei-ai.github.io/post-images/1583323266229.png" alt="" loading="lazy"><br>
搞文档</p>
<pre><code>即书（在线制作PPT）：https://www.keysuper.com/
PDF处理：https://smallpdf.com/cn
PDF处理：https://www.ilovepdf.com/zh-cn
PDF处理： https://www.pdfpai.com/
PDF处理：https://www.hipdf.cn/
图片压缩，PDF处理：https://docsmall.com/
腾讯文档（在线协作编辑和管理文档）：docs.qq.com
ProcessOn（在线协作制作结构图）：www.processon.com
iLovePDF（在线转换PDF利器）：www.ilovepdf.com
PPT在线制作：https://www.woodo.cn/
PDF24工具（pdf处理工具）：https://tools.pdf24.org/en
IMGBOT（在线图片处理）：www.imgbot.ai
福昕云编辑（在线编辑PDF）：edit.foxitcloud.cn
TinyPNG（在线压缩图片）：tinypng.com
UZER.ME（在线使用各种大应用，在线使用CAD，MATLAB，Office三件套
）：uzer.me
优品PPT（模板下载）： http://www.ypppt.com/
第一PPT（模板下载）：http://www.1ppt.com/xiazai/
三顿PPT导航：sandunppt.com
Excel函数表： https://support.office.com/zh-cn/article/excel-%E5%87%BD%E6%95%B0%EF%BC%88%E6%8C%89%E5%AD%97%E6%AF%8D%E9%A1%BA%E5%BA%8F%EF%BC%89-b3944572-255d-4efb-bb96-c6d90033e188
</code></pre>
<p><img src="https://sunlongfei-ai.github.io/post-images/1583323275531.png" alt="" loading="lazy"><br>
找图片</p>
<pre><code>电脑壁纸：http://lcoc.top/bizhi/
https://unsplash.com/
https://pixabay.com/
https://www.pexels.com/
https://visualhunt.com/
https://www.ssyer.com/
彼岸图网：http://pic.netbian.com/
极像素（超高清大图）：https://www.sigoo.com/
免费版权图片搜索：https://www.logosc.cn/so/
</code></pre>
<p><img src="https://sunlongfei-ai.github.io/post-images/1583323384890.jpeg" alt="" loading="lazy"><br>
原文链接：https://blog.csdn.net/qq_43901693/article/details/100606828</p>
<pre><code>文末，当然我也是转别人的啦！虽然是转的但是有用就是好东西啊！！！
这都不收藏本博网址，定期给予好玩意哦！！！
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一个翻译小件]]></title>
        <id>https://sunlongfei-ai.github.io/post/yi-ge-fan-yi-xiao-jian/</id>
        <link href="https://sunlongfei-ai.github.io/post/yi-ge-fan-yi-xiao-jian/">
        </link>
        <updated>2020-03-04T10:35:45.000Z</updated>
        <content type="html"><![CDATA[<p>写在开始的话🤝</p>
<p>这篇python写的请求主要是对现有的或者说对网上已经实现的api<br>
调用，或者说请求。<br>
用到的库也比较简单主要是requests库，，<br>
聚焦爬虫而已啦，尊重robots请求就看个人的意志啦！<br>
<img src="https://sunlongfei-ai.github.io/post-images/1583320050894.png" alt="" loading="lazy"></p>
<p>本篇主要是：<br>
requests  tkinter fake_useragent<br>
一个请求库 一个GUI库 另一个就当是一个反反爬库<br>
<img src="https://sunlongfei-ai.github.io/post-images/1583321411610.png" alt="" loading="lazy"></p>
<p>以下正文：<br>
<img src="https://sunlongfei-ai.github.io/post-images/1583321433370.png" alt="" loading="lazy"></p>
<p>网址：</p>
<pre><code>http://fanyi.youdao.com/
</code></pre>
<p>先帖出请求网址或者说api</p>
<pre><code>url = 'http://fanyi.youdao.com/translate?smartresult=dictsmartresult=rule'
</code></pre>
<p>以上网址可自主请求</p>
<p>不过以上网址是post请求</p>
<p>原来的网址又免不了js破解<br>
以大家，额不，以我比较懒惰的性格这种吃力不讨好的事情就算了<br>
什么js加密，有原来网址api接口干嘛不用<br>
<img src="https://sunlongfei-ai.github.io/post-images/1583321840908.png" alt="" loading="lazy"></p>
<p>那咱就先将data参数列举一下吧：</p>
<pre><code>data = {
'i': content,
'from': 'AUTO',
'to': 'AUTO',
'smartresult': 'dict',
'client': 'fanyideskweb',

# 'salt': '15827948097626',
# 'sign': 'b9989465680493e466593f9539e05796',
# 'ts': '1582794809762',
# 'bv': '767d6b27f6caf88200654eb2a7b6e2eb',

'doctype': 'json',
'version': '2.1',
'keyfrom': 'fanyi.web',
'action': 'FY_BY_REALTlME'
}

    以上即为请求参数
</code></pre>
<p>那么翻译参数怎么传呢？</p>
<pre><code>#获取输入的内容
content = entry.get()
#去空格 split是切割
content = content.strip()

#先解释一下entry吧 就是一个列表框
从里面获取文字，毕竟是用户输入，交互式界面嘛

req['translateResult'][0][0]['tgt']
以上用来获取网页返回的翻译参数
</code></pre>
<p>好了，请求网页参数的代码就这样了，好像是比较简单的嘛</p>
<p>什么js加密，还没api接口来的快嘛！</p>
<p>接下来就谈谈tkinter界面问题吧</p>
<pre><code># 创建窗口
window = Tk()
#窗口大小
window.geometry('820x600')
#窗口标题
window.title('我的翻译软件')
#控件
label = Label(window,text = '输入要翻译的文字：',font=('幼圆',20),fg = 'LightSeaGreen')
#位置 网格式的布局  grid  pack 包  place位置
label.place(x=0, y=0)

label1 = Label(window,text = '翻译后的结果为：',font=('幼圆',20),fg = 'LightSeaGreen')
#位置 网格式的布局  grid  pack 包  place位置
label1.place(x=0, y=250)
#输入框
entry = Entry(window,font = ('幼圆',15))
#修改位置 row为行 column为列
entry.place(x=20,y = 45,heigh = 200,width=770)
# entry.place(width=600, height=350)


#输出框
res = StringVar()
entry1 = Entry(window,font = ('幼圆',15),textvariable = res,width=600)
#修改位置 row为行 column为列
entry1.place(x=20,y = 300,heigh = 200,width=770)
# entry1.place(width=150, height=50)


#按钮
button = Button(window,text = '翻译',font=('幼圆',12),width = 25,height = 2,fg = 'DimGray',command = translation)
button.place(x=0, y=600,anchor='sw')
button1 = Button(window,text = '退出',font=('幼圆',12),width = 25,height = 2,fg = 'DimGray',command = window.quit)
button1.place(x=820, y=600,anchor='se')
#显示窗口
window.mainloop()
</code></pre>
<p>具体解释就看注释啦！</p>
<p>最最后贴一下完整代码吧！！！！<br>
<img src="https://sunlongfei-ai.github.io/post-images/1583322388921.png" alt="" loading="lazy"></p>
<pre><code>#-*- coding: utf-8 -*-

from tkinter import *
from tkinter import messagebox
import requests
def translation():
    &quot;&quot;&quot;
    翻译
    :return:
    &quot;&quot;&quot;
    #获取输入的内容
    content = entry.get()
    #去空格 split是切割
    content = content.strip()
    if content == '':
        messagebox.showinfo('提示',message = '请输入要翻译的内容')
    else:
        url = 'http://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule'
        data = {
            'i': content,
            'from': 'AUTO',
            'to': 'AUTO',
            'smartresult': 'dict',
            'client': 'fanyideskweb',

            # 'salt': '15827948097626',
            # 'sign': 'b9989465680493e466593f9539e05796',
            # 'ts': '1582794809762',
            # 'bv': '767d6b27f6caf88200654eb2a7b6e2eb',

            'doctype': 'json',
            'version': '2.1',
            'keyfrom': 'fanyi.web',
            'action': 'FY_BY_REALTlME'
        }
        req = requests.post(url,data = data).json()
        tran = req['translateResult'][0][0]['tgt']
        # print(tran)
        res.set(tran)
        return tran


# 创建窗口
window = Tk()
#窗口大小
window.geometry('820x600')
#窗口标题
window.title('我的翻译软件')
#控件
label = Label(window,text = '输入要翻译的文字：',font=('幼圆',20),fg = 'LightSeaGreen')
#位置 网格式的布局  grid  pack 包  place位置
label.place(x=0, y=0)

label1 = Label(window,text = '翻译后的结果为：',font=('幼圆',20),fg = 'LightSeaGreen')
#位置 网格式的布局  grid  pack 包  place位置
label1.place(x=0, y=250)
#输入框
entry = Entry(window,font = ('幼圆',15))
#修改位置 row为行 column为列
entry.place(x=20,y = 45,heigh = 200,width=770)
# entry.place(width=600, height=350)


#输出框
res = StringVar()
entry1 = Entry(window,font = ('幼圆',15),textvariable = res,width=600)
#修改位置 row为行 column为列
entry1.place(x=20,y = 300,heigh = 200,width=770)
# entry1.place(width=150, height=50)


#按钮
button = Button(window,text = '翻译',font=('幼圆',12),width = 25,height = 2,fg = 'DimGray',command = translation)
button.place(x=0, y=600,anchor='sw')
button1 = Button(window,text = '退出',font=('幼圆',12),width = 25,height = 2,fg = 'DimGray',command = window.quit)
button1.place(x=820, y=600,anchor='se')
#显示窗口
window.mainloop()
</code></pre>
<p>是比较简单的啊，就是界面不太擅长诶！！！！</p>
]]></content>
    </entry>
</feed>